TODO
----
* error handling for AJAX calls - test each one
* check/document model, make sure all changes are correct and things get cleared out when they should
* make list of everything (eg timers) that needs starting/stopping when states change
* ui for error

Things to update on state change:




app states:

    Initialising, Idle, Tuning In, Tuned In Idle, Loading Track, Playing, Going To Sleep, Sleeping, Error

    Initialising    --[ CODE channel codes in url ]--> Idle
    Initialising    --[ CODE get channel list OK ]--> Idle
    Initialising    --[ CODE get channel list ERR ]--> Error
    Idle            --[ USER selects channel ]--> Tuning In
    Idle            --[ CODE sleep timer ]--> Sleeping
    Tuning In       --[ CODE get channel playlist OK ]--> Tuned In Idle
    Tuning In       --[ CODE get channel playlist ERR ]--> Error
    Tuning In       --[ CODE sleep timer ]--> Sleeping
    Tuned In Idle   --[ CODE track requested ]--> Loading Track
    Loading Track   --[ CODE load track OK ]--> Playing
    Loading Track   --[ CODE load track ERR ]--> Error
    Loading Track   --[ CODE sleep timer ]--> Sleeping
    Playing         --[ USER selects same channel ]--> Idle
    Playing         --[ USER selects new channel ]--> Tuning In
    Playing         --[ CODE sleep timer ]--> Sleeping
    Playing         --[ CODE track ends ]--> Tuned In Idle
    Sleeping        --[ USER mouse/keyboard action ]--> Idle

Initialising
    from START

Idle
    from INITIALISING
    from TUNING_IN, PLAYING, TUNED_IN_IDLE, LOADING_TRACK (user deselects channel)
    from SLEEPING (wake action)

Tuning In
    from IDLE, TUNING_IN, PLAYING, TUNED_IN_IDLE, LOADING_TRACK (user selects channel)

Tuned In Idle
    from TUNING_IN (playlist success)
    from PLAYING (track ends)

Loading Track
    from TUNED_IN_IDLE

Playing
    from LOADING_TRACK
    from GOING_TO_SLEEP (wake action)

Going To Sleep
    from PLAYING

Sleeping
    from IDLE, TUNING_IN, TUNED_IN_IDLE, LOADING_TRACK, ERROR
    from GOING_TO_SLEEP

Error

model
    channels [{id, name, userChannel}]
    selectedChannelId
    playlist [{name, url, length, commercial}]
    nextTrackOffset
    track {name, url, length, commercial}
    volume
    minVolume
    maxVolume
    selectedScheduleChannelId
    stationBuilder
        shows   [{name,index,isCommercial,channels}]
        commercialShowIds
        includeCommercials
        savedChannelCodes


audioPlayer
    ✓ load(url,offset)
    ✓ play
    ✓ stop
    ✓ setVolume
    ✓ on: trackLoaded
    ✓ on: trackEnded
    ✓ on: error

sleepTimer
    ✓ start(minutes)
    ✓ stop
    ✓ on: sleepTimerTick
    ✓ on: sleepTimerDone

view
    ✓ on: channelButtonClick
    ✓ setChannels
    ✓ setChannelLoading
    ✓ setChannelLoaded
    ✓ setNoChannelSelected

    ✓ on: menuOpenClick
    ✓ on: menuCloseClick
    ✓ openMenu
    ✓ closeMenu

    ✓ on: volumeUpClick
    ✓ on: volumeDownClick
    ✓ setVolume

    ✓ on: newMessage
    ✓ on: messagePrintingComplete
    ✓ showMessage

    ✓ on: wake
    ✓ on: setSleepTimerClick
    ✓ on: cancelSleepTimerClick
    ✓ wakeUp
    ✓ sleep
    ✓ startSleepTimer
    ✓ updateSleepTimer
    ✓ clearSleepTimer

    ✓ on: scheduleButtonClick
    ✓ updateScheduleChannelSelection
    ✓ showSchedule
    ✓ clearSchedule

    ✓ on: stationBuilderShowClick
    ✓ on: stationBuilderPlayCommercialsClick
    ✓ on: stationBuilderCreateChannelClick
    ✓ on: stationBuilderAnotherChannelClick
    ✓ on: stationBuilderDeleteStationClick
    ✓ populateStationBuilderShows
    ✓ updateStationBuilderShowSelections
    ✓ updateStationBuilderIncludeCommercials

Tests
-----

- When everything on current playlist has been played, the API is queried again and playback continues
- When playing a show the Download as MP3 link is visible
- When not playing a show the Download as MP3 link is not visible
- Stop/start playing resumes at correct point
- Interrupting going to sleep process does not interrupt playback

Volume Control
- Volume is at max on first visit
- Volume + button is disabled on first visit
- Volume +/- are disabled/enabled correctly
- Volume is saved between page refreshes
- Adjusting volume before playing audio works correctly
- Volume is saved in browser storage and set next time site is opened

Sleep
- Sleeping message is displayed
- Periodic messages stop
- Volume fades out
- Triggering wake before sleep volume decrease completes, resets volume to pre-sleep level

Wake
- Volume restored to pre-sleep level
- Select channel message shown
- Periodic messages resume
- Message set to 'Select a Channel'

Schedule
- Schedule for playing channel is auto-selected when menu is opened
- Schedule is updated automatically if left open

Station Builder
- When listening to a custom station, schedule should show correct channels